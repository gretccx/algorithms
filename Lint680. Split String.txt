public class Solution {
    /*
     * @param : a string to be split
     * @return: all possible split string array
     */
    public List<List<String>> splitString(String s) {
        // write your code here
        List<List<String>> res = new ArrayList<>();
        if (s == null) {
            return res;
        }
        helper(s, 0, new ArrayList<>(), res);
        return res;
    }
    
    private void helper(String s,
                        int start,
                        List<String> split,
                        List<List<String>> res) {
        
        if (start > s.length() - 1) {
            res.add(new ArrayList<String>(split));
            return;
        }
        
        for (int i = 1; i < 3; i++) {
            if (start + i > s.length()) {
                continue;
            }
            split.add(s.substring(start, start + i));
            helper(s, start + i, split, res);
            split.remove(split.size() - 1);
        }
        
        // split.add(s.substring(start, start + 1));
        // helper(s, start + 1, split, res);
        // split.remove(split.size() - 1);
        
        // if (start > s.length() - 2) {
        //     return;
        // }
        // split.add(s.substring(start, start + 2));
        // helper(s, start + 2, split, res);
        // split.remove(split.size() - 1);
        
        return;
    }
}